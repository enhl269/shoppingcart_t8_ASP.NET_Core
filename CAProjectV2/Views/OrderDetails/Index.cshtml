@model IEnumerable<CAProjectV2.Models.OrderDetails>


<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet" />
<link href="~/css/button.css" rel="stylesheet" />
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link href="~/css/product.css" rel="stylesheet" />
<link href="~/css/main.css" rel="stylesheet" />
<link href="~/css/addtoCart.css" rel="stylesheet" />

@{ ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Dictionary<string, List<string>> orderCart = (Dictionary<string, List<string>>)ViewData["Data"];
    Dictionary<string, List<string>> imageCart = (Dictionary<string, List<string>>)ViewData["Images"];
    List<OrderDetails> orderCartNoDup = new List<OrderDetails>();
    List<DataView> UniqueList = (List<DataView>)ViewData["UniqueList"]; }

@section Scripts
{

}
<div class="container_addtoCart">

    <h1><b>Purchase History</b></h1>
    <hr class="solid" />
    <br />
    <br />
    <div class="shopping-cart">

        <table style="width:100%">
            <tr>
                <th>Product</th>
                <th>Purchase Date</th>
                <th></th>
                <th>Quantity</th>
                <th>Activation Code</th>

            </tr>


            @foreach (var value in UniqueList)
            {
                @:<tr>
                     @:<td>
                       @Model.Where(x => x.ProductId == value.ProductId && x.Order.Date == value.Date).Select(x => x.Product.ProductName).FirstOrDefault();
                     @:</td>

                     @:<td>
                       @Model.Where(x => x.ProductId == value.ProductId && x.Order.Date == value.Date).Select(x => x.Order.Date.ToString("dd MMMM yyyy")).FirstOrDefault();
                     @:</td>

                     @:<td>
                       <img src="@Model.Where(x => x.ProductId == value.ProductId && x.Order.Date == value.Date).Select(x => x.Product.ImageUrl).FirstOrDefault()" height="100" width="100" />
                     @:</td>

                     <td>
                        @Model.Where(x => x.ProductId == value.ProductId && x.Order.Date == value.Date).Count()
                     </td>
                     
                     @:<td>
                       @:<select>
                       @foreach (var x in Model.Where(x => x.ProductId == value.ProductId && x.Order.Date == value.Date))
                       {
                        <option value="@Html.DisplayFor(modelItem=>x.ActivationCode)">@Html.DisplayFor(modelItem => x.ActivationCode)</option>}
                       @:</select>
                     @:</td>
                @:</tr>
             }
        </table>

    </div>
</div>

